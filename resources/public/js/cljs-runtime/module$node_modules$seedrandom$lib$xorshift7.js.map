{
"version":3,
"file":"module$node_modules$seedrandom$lib$xorshift7.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/seedrandom/lib/xorshift7.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$seedrandom$lib$xorshift7\"] = function(global,require,module,exports) {\n// A Javascript implementaion of the \"xorshift7\" algorithm by\n// Fran\u00e7ois Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n};"],
"names":["shadow$provide","global","require","module","exports","define","XorGen","seed","me","next","me.next","X","x","i","t","v","init","j","length","charCodeAt","push","copy","f","slice","impl","opts","Date","xg","state","prng","double","prng.double","top","bot","result","int32","quick","prng.state","amd","xorshift7"]
}
