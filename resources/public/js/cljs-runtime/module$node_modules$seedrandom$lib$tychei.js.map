{
"version":3,
"file":"module$node_modules$seedrandom$lib$tychei.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/seedrandom/lib/tychei.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$seedrandom$lib$tychei\"] = function(global,require,module,exports) {\n// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n};"],
"names":["shadow$provide","global","require","module","exports","define","XorGen","seed","me","strseed","next","me.next","b","c","d","a","Math","floor","k","length","charCodeAt","copy","f","t","impl","opts","xg","state","prng","double","prng.double","top","bot","result","int32","quick","prng.state","amd","tychei"]
}
