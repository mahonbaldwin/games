shadow$provide.module$node_modules$seedrandom$lib$tychei=function(global$jscomp$0,require,module$jscomp$0,exports){(function(global,module,define){function XorGen(seed){var me=this,strseed="";me.next=function(){var b=me.b,c=me.c,d=me.d,a=me.a;b=b<<25^b>>>7^c;c=c-d|0;d=d<<24^d>>>8^a;a=a-b|0;me.b=b=b<<20^b>>>12^c;me.c=c=c-d|0;me.d=d<<16^c>>>16^a;return me.a=a-b|0};me.a=0;me.b=0;me.c=-1640531527;me.d=1367130551;seed===Math.floor(seed)?(me.a=seed/4294967296|0,me.b=seed|0):strseed+=seed;for(seed=0;seed<
strseed.length+20;seed++)me.b^=strseed.charCodeAt(seed)|0,me.next()}function copy(f,t){t.a=f.a;t.b=f.b;t.c=f.c;t.d=f.d;return t}function impl(seed,opts){var xg=new XorGen(seed);seed=opts&&opts.state;opts=function(){return(xg.next()>>>0)/4294967296};opts.double=function(){do{var top=xg.next()>>>11,bot=(xg.next()>>>0)/4294967296;top=(top+bot)/2097152}while(0===top);return top};opts.int32=xg.next;opts.quick=opts;seed&&("object"==typeof seed&&copy(seed,xg),opts.state=function(){return copy(xg,{})});return opts}
module&&module.exports?module.exports=impl:define&&define.amd?define(function(){return impl}):this.tychei=impl})(this,"object"==typeof module$jscomp$0&&module$jscomp$0,"function"==typeof define&&define)}
//# sourceMappingURL=module$node_modules$seedrandom$lib$tychei.js.map
