shadow$provide.module$node_modules$seedrandom$lib$xor128=function(global$jscomp$0,require,module$jscomp$0,exports){(function(global,module,define){function XorGen(seed){var me=this,strseed="";me.x=0;me.y=0;me.z=0;me.w=0;me.next=function(){var t=me.x^me.x<<11;me.x=me.y;me.y=me.z;me.z=me.w;return me.w=me.w^me.w>>>19^t^t>>>8};seed===(seed|0)?me.x=seed:strseed+=seed;for(seed=0;seed<strseed.length+64;seed++)me.x^=strseed.charCodeAt(seed)|0,me.next()}function copy(f,t){t.x=f.x;t.y=f.y;t.z=f.z;t.w=f.w;return t}
function impl(seed,opts){var xg=new XorGen(seed);seed=opts&&opts.state;opts=function(){return(xg.next()>>>0)/4294967296};opts.double=function(){do{var top=xg.next()>>>11,bot=(xg.next()>>>0)/4294967296;top=(top+bot)/2097152}while(0===top);return top};opts.int32=xg.next;opts.quick=opts;seed&&("object"==typeof seed&&copy(seed,xg),opts.state=function(){return copy(xg,{})});return opts}module&&module.exports?module.exports=impl:define&&define.amd?define(function(){return impl}):this.xor128=impl})(this,
"object"==typeof module$jscomp$0&&module$jscomp$0,"function"==typeof define&&define)}
//# sourceMappingURL=module$node_modules$seedrandom$lib$xor128.js.map
