{
"version":3,
"file":"module$node_modules$seedrandom$lib$xorwow.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/seedrandom/lib/xorwow.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$seedrandom$lib$xorwow\"] = function(global,require,module,exports) {\n// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n\n};"],
"names":["shadow$provide","global","require","module","exports","define","XorGen","seed","me","strseed","next","me.next","t","x","y","z","w","v","d","k","length","charCodeAt","copy","f","impl","opts","xg","state","prng","double","prng.double","top","bot","result","int32","quick","prng.state","amd","xorwow"]
}
