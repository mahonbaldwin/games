{
"version":3,
"file":"module$node_modules$browserify_sign$browser$index.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/browserify-sign/browser/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_sign$browser$index\"] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar stream = require('readable-stream')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar verify = require('./verify')\n\nvar algorithms = require('./algorithms.json')\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = Buffer.from(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Sign","algorithm","stream","Writable","call","data","algorithms","Error","_hashType","hash","_hash","createHash","_tag","id","_signType","sign","Verify","createSign","createVerify","Buffer","inherits","verify","Object","keys","forEach","key","from","toLowerCase","prototype","_write","Sign.prototype._write","_","done","update","Sign.prototype.update","enc","Sign.prototype.sign","end","digest","sig","toString","Verify.prototype._write","Verify.prototype.update","Verify.prototype.verify"]
}
